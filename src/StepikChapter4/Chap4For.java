package StepikChapter4;
import java.util.*;
public class Chap4For {
    public static void main(String[] args) {
        /*

Если известно точное количество повторений цикла, более удобно использовать другой цикл - for. Синтаксис:

for (инициализация; условие; счётчик) {
    блок команд;
}
Инициализация: действие, которое выполняется только один раз в начале работы цикла.
Обычно здесь задаётся внутренняя переменная, которая служит счётчиком количества повторений.

Условие: логическое выражение, которое вычисляется каждый раз перед итерацией цикла.
Если выражение ложно, выполнение цикла прекращается.

Счётчик: выражение, которое вычисляется после каждой итерации цикла.

Блок команд (тело цикла): команды, которые исполняются при каждой итерации цикла.

Инициализация, условие и счётчик помещаются в круглые скобки, а разделяются точкой с запятой.
Тело цикла помещается в фигурные скобки. Отступы, как обычно, незначащие - но влияющие на читаемость кода.

Следующий код печатает числа от единицы до пяти:

for (int i = 1; i <= 5; i++) {
    System.out.println(i);
}
Цикл инициализирует внутреннюю переменную i, которой присваивается значение 1.
Затем проверяется логическое условие (1 меньше либо равно 5?) и, поскольку условие истинно,
выполняется тело цикла, то есть, выводится на печать значение переменной i.
Оканчивается итерация выполнением инкремента, то есть значение переменной i становится равным двум.
Так цикл работает, пока значение переменной i не превысит 5, после чего цикл прекратит работу.

Обратите внимание - после окончания работы цикла переменная i исчезает, за пределами фигурных скобок она не существует.



Завершите программу таким образом, чтобы она напечатала "Отлично!" 10 раз.

 for (int i = 0; i < 10; i++) {
            System.out.println("Отлично!");}


В качестве условий можно использвать любые логические выражения,
главное - чтобы условие однозначно определялось, как true или false.

Счётчик также может иметь любой шаг или быть отрицательным:

for (int i = 1; i < 10;) {
    System.out.print(i + " "); // Бесконечный цикл
}

В последнем случае цикл будет выполняться бесконечно,
так как переменная i не меняет своё значение, а, значит, никогда не станет больше 10.

На вход подаётся натуральное число n. Выведите на печать в одной строке через пробел все числа от 1 до n включительно,
которые одновременно без остатка делятся на 2 и на 3. Если таких чисел в диапазоне нет, выведите "Таких чисел нет".

 int n = sc.nextInt();
	  for (int i = 6; i <= n ; i += 6 ) {
                    System.out.print(i + " ");
            }
            if (n < 6) System.out.print("Таких чисел нет");

на вход подаётся два натуральных числа - n и m. Напечатайте число n, повторённое m раз в одной строке через пробел.

int n = sc.nextInt();
        int m = sc.nextInt();
  for (int i = 0; i < m; i ++) {
            System.out.print(n + " ");
        }

На вход подаётся два натуральных числа x и y. Выведите на печать прямоугольник из звёздочек размером x*y.

int x = sc.nextInt();
        int y = sc.nextInt();
                for (int z = 0; z < x; z ++) {
            for (int i = 0; i < y; i++) {
                System.out.print("*");
            }
            System.out.println();
        }

На вход подаётся несколько целых чисел. Выведите эти числа, возведённые в степени от двух до пяти.

Формат вывода: для каждого введённого числа степени выводятся в отдельной строке через пробел.

Примечание. Каждая строка вывода оканчивается числом, а не пробелом.

int x;
        int x2, x3, x4, x5;
        while (sc.hasNext()) {
            x = sc.nextInt();
            x2 = x * x;
            x3 = x * x * x;
            x4 = x * x * x * x;
            x5 = x * x * x * x * x;
            System.out.print(x2 + " " + x3 + " " + x4 + " " + x5);
            System.out.println();
            }

Напечатайте "лесенку" из чисел от единицы до n, n > 0.

Примечание. Каждая строка в "лесенке" заканчивается цифрой (не пробелом).

 int n = sc.nextInt();
 for (int i = 1; i <= n; i++) {
     for (int j = 1; j <= i; j ++) {
         if (j < i) {
            System.out.print(j + " ");
            }
                if (j == i) {
                    System.out.print(j);
                }
            }
            System.out.println();
        }

Предположим, что мы работаем с последовательностью такого вида:

1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, ... .

Выведите на печать n (n > 0) членов данной последовательности в одну строку через пробел.

 int n = sc.nextInt(), count = 0;
        for (int i = 1; i <= n; i++) {
           for (int j = 1;  j <= i; j ++) {
                if (count == n) break;
              System.out.print(i + " ");
            count ++;
            }
        }
- 2 вариант:

String x="1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,";
        x =x.replace("," ,"");
        int n = sc.nextInt();
        x=x.substring(0,n*2-1);
        System.out.println(x);}}

Объединим две предыдущие задачи. Выведите "лесенку" из членов последовательности
из предыдущего шага от единицы до n, n > 0.

 int n = sc.nextInt();
       String x = "1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 6 6 6 6 6";
        for (int i = 1; i <= n; i++) {
            System.out.println(x.substring(0, i*2-1));
        }

2 solution:

for (int y = 1; n >= y; y++) {
            int x = 0;
            for (int i = 1; y >= i; i++) {
                for (int j = 1; i >= j; j++) {
                    if (y == x)
                    break;
                    x++;
                    if (y == x)
                        System.out.println(i);
                    else
                        System.out.print(i + " ");
                }
            }
        }

3 solution:

for (int k=1; k<=n; k++){
    int count = 1;
       for (int i=1; i<=n; i++){
           for (int j=1; j<=i; j++){
                        if (count<=k){
                    System.out.print((count==k)?(i):(i+" "));
                 count++;
                    }
                }
            }
            System.out.println();
        }

4 solution:

int n = input.nextInt(); input.close();
        for (int k = 1; k <= n; k++) {
            int cnt = 1;
            for (int i = 1; i <= k; i++) {
                for (int j = 1; j <= i && cnt++ <= k; j++)
                    System.out.print(i + (cnt > k ? "\n" : " "));
                                    }
                                }




        */
    } //main
} //class
